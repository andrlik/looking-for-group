# Generated by Django 2.2.5 on 2019-09-05 17:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IssueLink',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_type', models.CharField(db_index=True, default='gitlab', max_length=25)),
                ('external_id', models.CharField(blank=True, db_index=True, max_length=25, null=True, unique=True)),
                ('cached_status', models.CharField(choices=[('opened', 'Open'), ('closed', 'Closed')], default='opened', max_length=25, verbose_name='Status')),
                ('cached_title', models.CharField(blank=True, help_text='Title for the issue.', max_length=255, null=True, verbose_name='Title')),
                ('cached_description', models.TextField(blank=True, help_text='Descrition of the issue. Please be as detailed as possible.', null=True, verbose_name='Description')),
                ('cached_comment_count', models.IntegerField(default=0)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('sync_status', models.CharField(choices=[('pending', 'Pending creation in remote repo'), ('pending_err', 'Remote creation failed. Awaiting next try.'), ('updating', 'Pending updates to push to remote repo'), ('updating_err', 'Update failed. Awaiting next try.'), ('closing', 'In process of closing remote ticket'), ('close_err', 'Close failed, awaiting next try'), ('deleting', 'In process of deleting remote ticket.'), ('delete_err', 'Deletion failed. Awaiting next try.'), ('deleted', 'Deleted object awaiting local copy deletion.'), ('reopen', 'Reopening remote ticket'), ('reopen_err', 'Reopen failed. Awaiting next try.'), ('sync', 'In Sync')], db_index=True, default='pending', max_length=15)),
                ('last_sync', models.DateTimeField(default=django.utils.timezone.now)),
                ('creator', models.ForeignKey(blank=True, help_text='The LFG user that created this. If not specified, you should display it as simple an anonymous admin user.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issues_created', to=settings.AUTH_USER_MODEL)),
                ('subscribers', models.ManyToManyField(related_name='subscribed_issues', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IssueCommentLink',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_type', models.CharField(db_index=True, default='gitlab', max_length=25)),
                ('external_id', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True)),
                ('cached_body', models.TextField(blank=True, help_text='Enter your comment.', null=True, verbose_name='Body')),
                ('sync_status', models.CharField(choices=[('pending', 'Pending creation in remote repo'), ('pending_err', 'Remote creation failed. Awaiting next try.'), ('updating', 'Pending updates to push to remote repo'), ('updating_err', 'Update failed. Awaiting next try.'), ('closing', 'In process of closing remote ticket'), ('close_err', 'Close failed, awaiting next try'), ('deleting', 'In process of deleting remote ticket.'), ('delete_err', 'Deletion failed. Awaiting next try.'), ('deleted', 'Deleted object awaiting local copy deletion.'), ('reopen', 'Reopening remote ticket'), ('reopen_err', 'Reopen failed. Awaiting next try.'), ('sync', 'In Sync')], db_index=True, default='pending', max_length=15)),
                ('last_sync', models.DateTimeField(default=django.utils.timezone.now)),
                ('creator', models.ForeignKey(blank=True, help_text='Which LFG user created this comment. If this is set to null it should be displayed as some sort of anonymous user.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('master_issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='helpdesk.IssueLink')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
