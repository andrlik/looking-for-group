# Generated by Django 2.1 on 2018-08-23 21:14

import uuid

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('socialaccount', '0003_extra_data_default_dict'),
        ('gamer_profiles', '0014_auto_20180822_1307'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityDiscordLink',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='discord', to='gamer_profiles.GamerCommunity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscordServer',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('discord_id', models.BigIntegerField()),
                ('name', models.CharField(max_length=100)),
                ('icon_url', models.URLField(blank=True, help_text='Link to discord CDN hossted icon.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscordServerMembership',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('server_role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator'), ('admin', 'Admin')], max_length=25)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GamerDiscordLink',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sync_status', models.CharField(choices=[('synced', 'Synced'), ('syncing', 'Syncing in progress'), ('pending', 'Pending syncronization')], default='pending', help_text='Sync status with discord.', max_length=25)),
                ('last_successful_sync', models.DateTimeField(blank=True, help_text='Last time sync successfully completed.', null=True)),
                ('gamer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='discord', to='gamer_profiles.GamerProfile')),
                ('servers', models.ManyToManyField(related_name='gamers', through='discord.DiscordServerMembership', to='discord.DiscordServer')),
                ('socialaccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='discord_link', to='socialaccount.SocialAccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='discordservermembership',
            name='gamer_link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discord.GamerDiscordLink'),
        ),
        migrations.AddField(
            model_name='discordservermembership',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discord.DiscordServer'),
        ),
        migrations.AddField(
            model_name='communitydiscordlink',
            name='servers',
            field=models.ManyToManyField(related_name='communities', to='discord.DiscordServer'),
        ),
    ]
