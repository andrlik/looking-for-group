# Generated by Django 2.0.6 on 2018-06-11 16:34

import uuid

import django.db.models.deletion
import django.utils.timezone
import isbn_field.fields
import isbn_field.validators
import model_utils.fields
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='GamePublisher',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='Company Name', max_length=255)),
                ('url', models.URLField(blank=True, help_text='Company URL', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameSystem',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='Name of the game system.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the system.', null=True)),
                ('isbn', isbn_field.fields.ISBNField(blank=True, db_index=True, help_text='ISBN of published ruleset if applicable.', max_length=28, null=True, validators=[isbn_field.validators.ISBNValidator], verbose_name='ISBN')),
                ('ogl_license', models.BooleanField(help_text='Released under an Open Gaming License?')),
                ('system_url', models.URLField(blank=True, help_text='More info can be found here.', null=True)),
                ('original_publisher', models.ForeignKey(help_text='Publisher who originally released the rules system.', on_delete=django.db.models.deletion.CASCADE, to='game_catalog.GamePublisher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublishedGame',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, help_text='Title of the game', max_length=150)),
                ('description', models.TextField(blank=True, help_text='Description of the game.', null=True)),
                ('url', models.URLField(blank=True, help_text='More info can be found here.', null=True)),
                ('isbn', isbn_field.fields.ISBNField(blank=True, db_index=True, help_text='ISBN of published game if applicable.', max_length=28, null=True, validators=[isbn_field.validators.ISBNValidator], verbose_name='ISBN')),
                ('game_system', models.ForeignKey(help_text='Rules system the game is based upon.', null=True, on_delete=django.db.models.deletion.CASCADE, to='game_catalog.GameSystem')),
                ('publisher', models.ForeignKey(help_text='Publisher of the game.', on_delete=django.db.models.deletion.CASCADE, to='game_catalog.GamePublisher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublishedModule',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, help_text='Title of module', max_length=255)),
                ('isbn', isbn_field.fields.ISBNField(blank=True, db_index=True, help_text='ISBN of published module if applicable.', max_length=28, null=True, validators=[isbn_field.validators.ISBNValidator], verbose_name='ISBN')),
                ('url', models.URLField(blank=True, help_text='More info can be found here.', null=True)),
                ('parent_game', models.ForeignKey(help_text='Module is written for this game.', on_delete=django.db.models.deletion.CASCADE, to='game_catalog.PublishedGame')),
                ('publisher', models.ForeignKey(help_text='Publisher of module. May be different than original game publisher.', on_delete=django.db.models.deletion.CASCADE, to='game_catalog.GamePublisher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UUIDTaggedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_catalog_uuidtaggeditem_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_catalog_uuidtaggeditem_items', to='taggit.Tag')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.AddField(
            model_name='publishedmodule',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='game_catalog.UUIDTaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='publishedgame',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='game_catalog.UUIDTaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='gamesystem',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='game_catalog.UUIDTaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
