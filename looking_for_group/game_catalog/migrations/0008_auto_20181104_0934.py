# Generated by Django 2.1.2 on 2018-11-04 14:34

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import isbn_field.fields
import isbn_field.validators
import model_utils.fields
import taggit.managers
import uuid
import base64


def populate_editions_and_sourcebooks(apps, schema_editor):
    print("Migrating data by copying from Published games...")
    Game = apps.get_model("game_catalog", "PublishedGame")
    Edition = apps.get_model("game_catalog", "GameEdition")
    SourceBook = apps.get_model("game_catalog", "SourceBook")
    created_editions = 0
    created_sourcebooks = 0
    games = Game.objects.all()
    for game in games:
        edition = Edition(
            name=game.edition,
            game=game,
            publisher=game.publisher,
            game_system=game.game_system,
            release_date=game.publication_date,
            description=game.description,
            image=game.image,
            url=game.url,
        )
        print(edition.id)
        edition.slug = (
            base64.urlsafe_b64encode(edition.id.bytes).decode("utf-8").replace("=", "")
        )

        edition.save()
        created_editions += 1
        sb = SourceBook(
            title=str(edition),
            corebook=True,
            edition=edition,
            image=game.image,
            release_date=game.publication_date,
            isbn=game.isbn,
        )
        sb.slug = base64.urlsafe_b64encode(sb.id.bytes).decode("utf-8").replace("=", "")
        sb.save()
        created_sourcebooks += 1
    print(
        "Created {} new editions and {} new sourcebooks. MAKE SURE TO CHECK THE TITLES OF SOURCEBOOKS AS THESE WERE AUTOGENERATED FROM OLD DATA.".format(
            created_editions, created_sourcebooks
        )
    )


def remove_editions_and_sourcebooks(apps, schema_editor):
    print("Deleting data...")
    Edition = apps.get_model("game_catalog", "GameEdition")
    SourceBook = apps.get_model("game_catalog", "SourceBook")
    sb_deleted, obj_dict = SourceBook.objects.all().delete()
    ed_deleted, obj_dict = Edition.objects.all().delete()
    print("Deleted {} sourcebooks and {} editions.".format(sb_deleted, ed_deleted))


class Migration(migrations.Migration):

    dependencies = [
        ("taggit", "0002_auto_20150616_2121"),
        ("game_catalog", "0007_auto_20180830_1915"),
    ]

    operations = [
        migrations.CreateModel(
            name="GameEdition",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "slug",
                    models.CharField(
                        blank=True, db_index=True, max_length=50, unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Edition label, e.g. "5E"', max_length=100
                    ),
                ),
                ("image", models.ImageField(blank=True, null=True, upload_to="")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the edition if applicable.",
                        null=True,
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True,
                        help_text="More info can be found at this external site.",
                        null=True,
                    ),
                ),
                (
                    "release_date",
                    models.DateField(
                        blank=True, help_text="When was this released?", null=True
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        help_text="Which game is this an edition of?",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game_catalog.PublishedGame",
                    ),
                ),
                (
                    "game_system",
                    models.ForeignKey(
                        null=True,
                        blank=True,
                        help_text="Which game system does this edition use?",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game_catalog.GameSystem",
                    ),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        help_text="Who published this edition?",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game_catalog.GamePublisher",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="game_catalog.UUIDTaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SourceBook",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "slug",
                    models.CharField(
                        blank=True, db_index=True, max_length=50, unique=True
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Title of sourcebook.", max_length=255),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Image of book cover, if available.",
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "corebook",
                    models.BooleanField(
                        default=False,
                        help_text="Is this volume considered a corebook for the edition?",
                    ),
                ),
                (
                    "release_date",
                    models.DateField(
                        blank=True, help_text="When was this book published?", null=True
                    ),
                ),
                (
                    "isbn",
                    isbn_field.fields.ISBNField(
                        blank=True,
                        help_text="ISBN for this book, if available.",
                        max_length=28,
                        null=True,
                        validators=[isbn_field.validators.ISBNValidator],
                        verbose_name="ISBN",
                    ),
                ),
                (
                    "edition",
                    models.ForeignKey(
                        help_text="Edition this relates to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game_catalog.GameEdition",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="game_catalog.UUIDTaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
        ),
        migrations.AlterOrderWithRespectTo(
            name="sourcebook", order_with_respect_to="edition"
        ),
        migrations.AlterOrderWithRespectTo(
            name="gameedition", order_with_respect_to="game"
        ),
        migrations.RunPython(
            populate_editions_and_sourcebooks,
            reverse_code=remove_editions_and_sourcebooks,
        ),
    ]
