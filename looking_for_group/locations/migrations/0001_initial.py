# Generated by Django 2.2.4 on 2019-08-14 18:07

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('google_place_name', models.CharField(blank=True, help_text='Place name as retrieved from Google.', max_length=255, null=True, verbose_name='Place Name')),
                ('google_place_id', models.CharField(blank=True, db_index=True, help_text='Google place id', max_length=255, null=True, verbose_name='Place ID')),
                ('formatted_address', models.CharField(blank=True, help_text='The address as one text string.', max_length=255, null=True, verbose_name='Formatted Address')),
                ('latlong', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='A point representing the lat and long of the location.', null=True, srid=4326, verbose_name='Geolocation')),
                ('viewport_ne', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='Recommended NE of viewport for map display', null=True, srid=4326, verbose_name='NE corner of recommended viewport')),
                ('viewport_sw', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='Recommended SW of viewport for map display', null=True, srid=4326, verbose_name='SW corner of recommended viewport')),
                ('city', models.CharField(blank=True, help_text='City as returned by geocoder.', max_length=255, null=True, verbose_name='City')),
                ('postal_code', models.CharField(blank=True, help_text='Postal code', max_length=15, null=True, verbose_name='Postal code')),
                ('state', models.CharField(blank=True, help_text='State as returned by geocoder.', max_length=255, null=True, verbose_name='State')),
                ('country', models.CharField(blank=True, help_text='Country as returned by geocoder.', max_length=90, null=True, verbose_name='Country')),
                ('location_accuracy', models.CharField(blank=True, db_index=True, help_text="Google's location type, e.g. ROOFTOP", max_length=50, null=True)),
                ('geocode_method', models.CharField(choices=[('forward', 'Forward'), ('reverse', 'Reverse')], default='forward', help_text='What process was used for geocoding?', max_length=15)),
                ('geocode_attempts', models.PositiveIntegerField(default=0, help_text='How many times have we attempted to send this to the geocoder?')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
